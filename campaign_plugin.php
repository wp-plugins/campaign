<?php/*  Plugin Name:Campaign  Description: Create campaign,Funding on each campaign.  Version: 1.0  Author:Infoway  License: GPL2 */ob_start();/* * Define some basic plugin url and path */global $wpdb, $table_prefix;define('CAMPAIGN_PLUGIN_PATH', dirname(__FILE__));define('CAMPAIGN_PLUGIN_URL', plugin_dir_url(__FILE__));define('CAMPAIGN_FUND_TBL', $table_prefix . 'fund');register_activation_hook(__FILE__, 'campInit');function campInit(){    global $wpdb, $table_prefix;    $sql = "CREATE TABLE IF NOT EXISTS `{$table_prefix}_fund` (  `ID` int(11) NOT NULL AUTO_INCREMENT,  `campaign_id` int(11) NOT NULL,  `campaign_owner_id` int(11) NOT NULL,  `doner_name` varchar(50) NOT NULL,  `doner_email` varchar(100) NOT NULL,  `doner_amount` bigint(20) NOT NULL,  `transaction_id` varchar(50) NOT NULL,  PRIMARY KEY (`ID`)) ENGINE=MyISAM DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;";        $wpdb->query($sql);}/* * Enqueue script for front end  */add_action('wp_enqueue_scripts', 'campaign_front_end_script_func');function campaign_front_end_script_func() {    wp_enqueue_script('jquery');    wp_register_script('camp_frontend_js', CAMPAIGN_PLUGIN_URL . 'js/camp_front_end_js.js');    wp_enqueue_script('camp_frontend_js');    wp_localize_script('camp_frontend_js', 'CampAjax', array('ajaxurl' => admin_url('admin-ajax.php')));    wp_register_style('camp_css', CAMPAIGN_PLUGIN_URL . 'css/camp_css.css');    wp_enqueue_style('camp_css');}function send_mail_func($to, $subject, $message) {    $headers = "From: " . get_bloginfo("name") . ' <' . get_option('admin_email') . '>' . "\r\n";    $headers .= "MIME-Version: 1.0\r\n";    $headers .= "Content-Type: text/html; charset=ISO-8859-1\r\n";    wp_mail($to, $subject, $message, $headers);}add_filter('show_admin_bar', '__return_false');require_once(CAMPAIGN_PLUGIN_PATH . '/load.php');global $campaignClass;$campaignClass = new Campaign_Func_Class();add_action('init', 'paypal_process_func');function paypal_process_func() {    global $wpdb, $table_prefix;     if (isset($_REQUEST['test_ipn']) && $_REQUEST['test_ipn'] == 'ipn') {                    $custom = $_POST['custom'];                    $transaction_id = $_POST['txn_id'];                    $custom_val = explode('#', $custom);                    $campid = $custom_val['0'];                    $camp_owner_id = $custom_val['1'];                    $doner_name = $custom_val['2'];                    $doner_email = $custom_val['3'];                    $donate_amount = $custom_val['4'];                    $owner_email = get_userdata($camp_owner_id);                    $campname = get_post($campid);                    $insert_arr = array(                        'campaign_id' => $campid,                        'campaign_owner_id' => $camp_owner_id,                        'doner_name' => $doner_name,                        'doner_email' => $doner_email,                        'doner_amount' => $donate_amount,                        'transaction_id' => $transaction_id                    );                    $wpdb->insert($table_prefix . 'fund', $insert_arr);                    /*=====================For Admin=================*/                    $to = get_bloginfo('admin_email');                    $msg = '<p>Campaign Name: ' . $campname->post_title . '</p>';                    $msg .= '<p>Doner Email: ' . $doner_email . '</p>';                    $msg .= '<p>Name: ' . $doner_name . '</p>';                    $msg .= '<p>Donate Amount: ' . $donate_amount . '</p>';                    $msg .= '<p>Transacion Id: ' . $transaction_id . '</p>';                    $sub = 'New Donation Recieved';                    /*==============================For Campaign Creator========================*/                    $creator_mail = $owner_email->user_email;                    $creator_msg .= '<p>Campaign Name: ' . $campname->post_title . '</p>';                    $creator_msg .= '<p>Doner Email: ' . $owner_email->user_email . '</p>';                    $creator_sub = 'A Donation Recieved For Your Campaign';                    /*=============================For Doner=============================*/                    $doner_msg = '<p>Campaign Name: ' . $campname->post_title . '</p>';                    $doner_msg .= '<p>Donate Amount: ' . $donate_amount . '</p>';                    $doner_msg .= '<p>Transacion Id: ' . $transaction_id . '</p>';                    $doner_sub = 'Thank You For Donate';                    /* shoot to admin */                    send_mail_func($to, $sub, $msg);                    /*Shoot to Campaign creato*/                    send_mail_func($creator_mail, $creator_sub, $creator_msg);                    /*Shoot to Doner*/                    send_mail_func($doner_email, $doner_sub, $doner_msg);    }}function short_content($num, $content) {    $limit = $num + 1;    $cont = str_split($content);    $length = count($cont);    if ($length >= $num) {        $cont = array_slice($cont, 0, $num);        $content = implode("", $cont) . '...';    } else {        $content = $content;    }    return $content;}/* ==================Ajax calling===================== */add_action('wp_ajax_set_live', 'set_live_func');add_action('wp_ajax_nopriv_set_live', 'set_live_func');function set_live_func() {    global $wpdb;    $id = $_POST['id'];    update_post_meta($id, '_camp_is_live', 1);    die();}?>